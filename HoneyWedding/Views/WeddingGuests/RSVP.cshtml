@model HoneyWedding.Models.WeddingGuestViewModel
@{
    ViewBag.Title = "RSVP";
}
@section bodyTagOpen {
    <body class="mdl-color--indigo-100">
}

<style>
    h4, h5, h6 {
        margin-top: 8px;
        margin-bottom: 8px;
        /*font-weight: 700;*/
        color: rgb(57, 73, 171);
    }

    select {
        display: block;
        margin-bottom: 8px;
    }

    .form-disabled {
        opacity: 0.3;
    }

    .form-hidden {
        display: none;
    }
</style>

<div class="mdl-card mdl-card__page-small mdl-shadow--2dp">

    <section id="rsvpForm">

        @using (Html.BeginForm("RSVP", "WeddingGuests", FormMethod.Post, new { @class = "", @id = "RsvpForm", role = "form" }))
        {
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.Email)
            @Html.HiddenFor(model => model.HasPlusOne)
            @Html.HiddenFor(model => model.PlusOneIsKnown)
            @Html.AntiForgeryToken()
            <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        <img alt="RSVP" src="../../Content/img/honey_wedding--RSVP_header.jpg" width="100%" style="margin: 0; border: 0; padding: 0; display: block;">
                    </td>
                </tr>
            </table>

            <div class="mdl-card__supporting-text">
                @Html.ValidationSummary("", new { @class = "text-error" })

                <h4>Hi @Model.FirstName! @(ViewBag.DidRsvp == true ? "We've already received your RSVP, but you can use the form below to update the information you provided." : "Thanks so much for taking the time to RSVP." ) Will you be able to join us at our ceremony on October 1st?</h4>
                @Html.EditorFor(m => m.CanAttend, new { @class = "" })
                @if (ViewBag.DidRsvp != true)
                {
                    <p><strong>NOTE: </strong>If you'd like to attend but you're not certain if you'll be able, select 'Unsure' and we'll send you a reminder in a few weeks.</p>
                }

                <div class="form-group form-hidden" id="DietaryPrefs">
                    <h5>Dietary Preferences</h5>
                    <p>It's important to us that we accommodate the dietary needs of our guests. The menu may contain gluten items like bread and crackers, but these will be obvious and easy to avoid if desired.</p>
                    <h6>Would you like a meatless meal option?</h6>
                    @Html.EditorFor(m => m.Meatless, new { @class = "" })

                    <h6>Would you like a vegan meal option?</h6>
                    @Html.EditorFor(m => m.Vegan, new { @class = "" })

                    <h6>Do you have any special dietary needs not accommodated by the questions above?</h6>
                    @Html.EditorFor(m => m.DietaryNotes, new { @class = "" })
                </div>

                @if (Model.HasPlusOne)
                {
                    <h6>@(Model.PlusOneCanAtend == false ? string.Format("You previously indicated that {0}. Unfortunately you can't change that response yourself. If your plans have changed please email Lisa and Russ as soon as possible at contact@thehoneyswedding.net, and we'll do our best to accommodate you!", Model.PlusOneIsKnown ? string.Format("{0} won't be able to attend.", Model.FirstNamePlusOne) : "you did not wish to bring a 'plus one'") : "" )</h6>
                    <div class="form-disabled" id="PlusOneResponse">
                        <div class="form-hidden" id="HorizontalSeparator">
                            <br />
                            <hr />
                            <br />
                        </div>
                        <h4>@(Model.PlusOneIsKnown ? string.Format("Will {0} be able to attend?", Model.FirstNamePlusOne) : "Would you like to bring a 'plus one'?")</h4>
                        @Html.EditorFor(m => m.PlusOneCanAtend, new { @class = "" })
                        <p>If you're not certain, select 'Unsure' and we'll send you a reminder in a few weeks.</p>
                        @if (!Model.PlusOneIsKnown)
                        {
                            <div class="form-hidden" id="PlusOneName">
                                <h6>For use on the seating chart, please provide us with the name of your 'plus one':</h6>
                                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                                    @Html.TextBoxFor(m => m.FirstNamePlusOne, new { @class = "mdl-textfield__input" })
                                    @Html.LabelFor(m => m.FirstNamePlusOne, new { @class = "mdl-textfield__label" })
                                    @Html.ValidationMessageFor(m => m.FirstNamePlusOne, "", new { @class = "mdl-textfield__error" })
                                </div>
                                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                                    @Html.TextBoxFor(m => m.LastNamePlusOne, new { @class = "mdl-textfield__input" })
                                    @Html.LabelFor(m => m.LastNamePlusOne, new { @class = "mdl-textfield__label" })
                                    @Html.ValidationMessageFor(m => m.LastNamePlusOne, "", new { @class = "mdl-textfield__error" })
                                </div>
                                <p><strong>NOTE: </strong>If you're not sure who you're bringing but you want to reserve the 'plus one' anyway, just leave the name blank and we'll send you a reminder later.</p>
                            </div>                        }
                        else
                        {
                            @Html.HiddenFor(model => model.FirstNamePlusOne)
                            @Html.HiddenFor(model => model.LastNamePlusOne)
                        }
                    </div>

                    <div class="form-group form-hidden" id="PlusOneDietaryPrefs">
                        <h5>Dietary Preferences for @(Model.PlusOneIsKnown ? Model.FirstNamePlusOne : "your 'plus one'")</h5>

                        <h6>Would @(Model.PlusOneIsKnown ? Model.FirstNamePlusOne : "your 'plus one'") like a meatless meal option?</h6>
                        @Html.EditorFor(m => m.MeatlessPlusOne, new { @class = "" })

                        <h6>Would @(Model.PlusOneIsKnown ? Model.FirstNamePlusOne : "your 'plus one'") like a vegan meal option?</h6>
                        @Html.EditorFor(m => m.VeganPlusOne, new { @class = "" })

                        <h6>Does @(Model.PlusOneIsKnown ? Model.FirstNamePlusOne : "your 'plus one'") have any special dietary needs not accommodated by the questions above?</h6>
                        @Html.EditorFor(m => m.DietaryNotesPlusOne, new { @class = "" })
                    </div>

                }


                <input type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-color--green-400 mdl-color-text--accent-contrast" value="@(ViewBag.DidRsvp == true ? "Update RSVP" : "Submit RSVP" )" />
            </div>
        }
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var plusOneOnLockdown = false;

        function handleCanAttend() {
            var value = $("#CanAttend").val();
            if (value == "true") {
                $("#DietaryPrefs").removeClass("form-hidden");
                $("#HorizontalSeparator").removeClass("form-hidden");
                if (!plusOneOnLockdown)
                {
                    $("#PlusOneResponse").removeClass("form-disabled");
                    $("#PlusOneCanAtend").prop("disabled", false);
                }
            }
            @*else if (value == "" && "@ViewBag.DidRsvp" == "True") {
                alert("If you previously responded 'Yes' then you can only change your response to 'No'. If your circumstances have changed and you're uncertain whether you'll be able to attend just leave your response as 'Yes' for now, and we'll send you a reminder in a few weeks.");
                $("#CanAttend").val("true");
                return false;
            }*@
            else {
                $("#DietaryPrefs").addClass("form-hidden");
                $("#PlusOneDietaryPrefs").addClass("form-hidden");
                $("#HorizontalSeparator").addClass("form-hidden");
                if (!plusOneOnLockdown)
                {
                    $("#PlusOneResponse").addClass("form-disabled");
                    $("#PlusOneCanAtend").prop("disabled", true);
                    $("#PlusOneCanAtend").val("");
                    $("#PlusOneName").addClass("form-hidden");
                }
            }
        }

        function handlePlusOneCanAtend() {
            var value = $("#PlusOneCanAtend").val();
            if (value == "true") {
                $("#PlusOneDietaryPrefs").removeClass("form-hidden");
                $("#PlusOneName").removeClass("form-hidden");
            }
            else {
                $("#PlusOneDietaryPrefs").addClass("form-hidden");
                $("#PlusOneName").addClass("form-hidden");
            }
        }

    </script>
}


<script>
    @section scriptWindowLoad {

    $("#CanAttend").change(function () {
        handleCanAttend();
    });

    $("#PlusOneCanAtend").change(function () {
        handlePlusOneCanAtend();
    });

    if ($("#CanAttend").val() != "true") {
        $("#PlusOneCanAtend").prop("disabled", true);
    }

    if ($("#PlusOneCanAtend").val() == "false") {
        plusOneOnLockdown = true;
        $("#PlusOneResponse").addClass("form-hidden");

    }

    var cleanForm = $("#RsvpForm").serialize();

    $("#RsvpForm").submit(function () {
        if ("@ViewBag.DidRsvp" == "True")
        {
            if ($("#RsvpForm").serialize() == cleanForm) {
                alert("You have not changed any of your RSVP information");
                return false;
            }
        }
        if ($("#CanAttend").val() == "false") {
            return confirm("PLEASE CONFIRM: Your RSVP indicates that you will not be able to attend our ceremony. If you wish to change your response you will not be able to do this yourself--you'll need to email Lisa or Russ directly. Would you still like to submit your RSVP?");
        }
        else if (!plusOneOnLockdown && $("#PlusOneCanAtend").val() == "false") {
            var confirmMessage;
            if ($("#PlusOneIsKnown").val() == "true")
            {
                confirmMessage = $("#FirstNamePlusOne").val() + " will be unable to attend";
            }
            else {
                confirmMessage = "you would not like to bring a 'plus one' to";
            }
            return confirm("PLEASE CONFIRM: Your RSVP indicates that " + confirmMessage + " our ceremony. If you wish to change this response you won't be able to do this yourself--you'll need to email Lisa or Russ directly. Would you still like to submit your RSVP?");
        }
    });

    handleCanAttend();
    handlePlusOneCanAtend();

    }
</script>
