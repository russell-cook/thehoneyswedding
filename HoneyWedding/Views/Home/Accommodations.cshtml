
@model List<HoneyWedding.Models.AccommodationViewModel>

@{
    ViewBag.Title = "Staying There";
    ViewBag.NoContentWrapper = true;
    //Layout = "~/views/shared/_layoutBlank.cshtml";

}

@section headLevel {
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <style>
        .mdl-card__accommodation-list .mdl-card__title {
            color: #fff;
            height: 75px;
            background: url('../../Content/img/honeys_on_couch.jpg') center / cover;
        }

        .mdl-card__accommodation-detail .mdl-card__title {
            color: #fff;
            height: 200px;
        }

        .mdl-card__accommodation-detail .mdl-card__supporting-text {
            overflow-y: auto;
            height: -webit-calc(100% - 200px);
            height: -moz-calc(100% - 200px);
            height: calc(100% - 200px);
        }

        .mdl-card__accommodation-detail .mdl-card__actions {
            height: 55px;
        }

        .accommodationsFlexContainer {
            display: flex;
            flex-direction: column;
            height: -webit-calc(100% - 55px);
            height: -moz-calc(100% - 55px);
            height: calc(100% - 55px);
        }

        .mdl-card__accommodation-detail h5 {
            margin-top: 0;
        }

        .phoneText {
            display: none;
        }


        @@media screen and (max-width: 959px) and (min-width: 480px) {
            .accommodationsFlexContainer {
                flex-direction: row;
                height: -webit-calc(100% - 55px);
                height: -moz-calc(100% - 55px);
                height: calc(100% - 55px);
            }

            .mdl-card__accommodation-detail .mdl-card__title {
                width: 40%;
                height: 100%;
            }

            .mdl-card__accommodation-detail .mdl-card__supporting-text {
                width: 60%;
                height: 100%;
            }
        }

        @@media screen and (max-width: 479px) {
            .accommodationsFlexContainer {
                flex-direction: column;
                height: -webit-calc(100% - 55px);
                height: -moz-calc(100% - 55px);
                height: calc(100% - 55px);
            }

            .mdl-card__accommodation-detail .mdl-card__title {
                height: 100px;
            }

            .mdl-card__accommodation-detail .mdl-card__supporting-text {
                overflow-y: auto;
                height: -webit-calc(100% - 100px);
                height: -moz-calc(100% - 100px);
                height: calc(100% - 100px);
            }

            .phoneText {
                display: normal;
            }

            .largeScreenText {
                display: none;
            }
        }

        @@media screen and (max-height: 479px) {
            .mdl-card__accommodation-detail .mdl-card__title {
                height: 100px;
            }
        }
    </style>
}

<div class="mdl-grid">

    <div class="mdl-cell mdl-cell--5-col-desktop mdl-cell--8-col-tablet">
        <div class="mdl-card mdl-card__accommodation-detail mdl-shadow--2dp" id="card__accommodation-detail">
            <!--Accommodation Location Detail content-->
        </div>
    </div>

    <div class="mdl-cell mdl-cell--7-col-desktop mdl-cell--8-col-tablet mdl-cell--hide-phone" id="cell__accommodations-list">
        <div class="mdl-card mdl-card__accommodation-list mdl-shadow--2dp" id="card__accommodations-list">
            <div class="mdl-card__supporting-text">
                <table class="mdl-data-table mdl-js-data-table table__fixed-headers" id="table__accommodations-list">
                    <thead>
                        <tr>
                            <th class="mdl-data-table__cell--non-numeric">
                                @Html.DisplayNameFor(model => model.FirstOrDefault().LocationName)
                            </th>
                            <th class="mdl-data-table__cell">
                                @Html.DisplayNameFor(model => model.FirstOrDefault().RoomFor)
                            </th>
                            <th class="mdl-data-table__cell">
                                @Html.DisplayNameFor(model => model.FirstOrDefault().PriceRange)
                            </th>
                            <th class="mdl-data-table__cell--non-numeric">
                                @*<span style="vertical-align: bottom">@Html.DisplayNameFor(model => model.FirstOrDefault().BallerRating)</span> <button id="menu_ballerRating" class="mdl-button mdl-js-button mdl-button--icon"><i class="material-icons mdl-color-text--accent">info</i></button> <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu" for="menu_ballerRating"><li class="mdl-menu__item"><a href="http://onlineslangdictionary.com/meaning-definition-of/baller" target="_blank">More Info</a></li></ul>*@
                                <a href="#" id="menu_ballerRating">@Html.DisplayNameFor(model => model.FirstOrDefault().BallerRating)</a> <ul class="mdl-menu mdl-menu--bottom-left mdl-js-menu" for="menu_ballerRating"><li class="mdl-menu__item"><a href="http://onlineslangdictionary.com/meaning-definition-of/baller" target="_blank">More Info</a></li></ul>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @foreach (var item in Model)
                        {
                            <tr onclick="loadAccommodation(@item.ID)">
                                <td class="mdl-data-table__cell--non-numeric">
                                    @Html.DisplayFor(modelItem => item.LocationName)
                                </td>
                                <td class="mdl-data-table__cell">
                                    @Html.DisplayFor(modelItem => item.RoomFor)
                                </td>
                                <td class="mdl-data-table__cell">
                                    @Html.DisplayFor(modelItem => item.PriceRange)
                                </td>
                                <td class="mdl-data-table__cell--non-numeric">
                                    @Html.DisplayFor(modelItem => item.BallerRating)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

<div id="accordion" class="mdl-grid mdl-cell--hide-desktop mdl-cell--hide-tablet">
    <div class="mdl-cell--4-col">
        <ul class="mdl-list">
            @foreach (var item in Model)
            {
                <li class="mdl-list__item mdl-list__item--three-line accordion-toggle">
                    <span class="mdl-list__item-primary-content">
                        <span class="mdl-list__item-avatar" style="background: url('../../Content/img/@Html.DisplayFor(modelItem => item.Img)') center / cover;"></span>
                        <span>@Html.DisplayFor(modelItem => item.LocationName)</span>
                        <span class="mdl-list__item-text-body">
                            @Html.DisplayNameFor(modelItem => item.DistanceFromVenue): @Html.DisplayFor(modelItem => item.DistanceFromVenue) mi<br />
                            @Html.DisplayNameFor(modelItem => item.RoomFor): @Html.DisplayFor(modelItem => item.RoomFor)
                        </span>
                    </span>
                    <span class="mdl-list__item-secondary-content">
                        <span class="mdl-color-text--accent">@Html.DisplayFor(modelItem => item.PriceRange)</span>
                    </span>
                </li>
                <li class="accordion-content mdl-list__item">
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                    <p>
                        <strong>@Html.DisplayNameFor(modelItem => item.Notes): </strong>@Html.DisplayFor(modelItem => item.Notes)<br />
                    </p>
                    <p>
                        <strong>@Html.DisplayNameFor(modelItem => item.BallerRating): </strong>@Html.DisplayFor(modelItem => item.BallerRating)<br />
                        <strong>@Html.DisplayNameFor(modelItem => item.PhoneNumber): </strong>@Html.DisplayFor(modelItem => item.PhoneNumber)<br />
                        <strong>@Html.DisplayNameFor(modelItem => item.Email): </strong>@Html.DisplayFor(modelItem => item.Email)<br />
                    </p>
                    @if (!item.Website.IsEmpty() || !item.MapLink.IsEmpty())
                    {
                        if (!item.Website.IsEmpty())
                        {
                            <a class="mdl-button mdl-js-button mdl-button--raised" href="@item.Website" target="_blank">
                                Website
                            </a>
                        }
                        if (!item.MapLink.IsEmpty())
                        {
                            <a class="mdl-button mdl-js-button mdl-button--raised" href="@item.MapLink" target="_blank">
                                Map
                            </a>
                        }
                    }

                </li>
            }

        </ul>
    </div>
</div>


@section scripts {
    <script type="text/javascript">

        var accommodationDetailUrl = '@Url.Action("AccommodationDetail")';
        var accommodationDetail = $('#card__accommodation-detail');

        function loadAccommodation(accommodationId, pageLoad) {
            // clear html from target div
            accommodationDetail.html('');

            // create spinner for loading
            var spinner = document.createElement('div');
            spinner.className = 'mdl-spinner mdl-js-spinner is-active';
            spinner.style.margin = 'auto auto';
            if (!pageLoad) // no upgrade needed on page load, mdl will upgrade automatically
            {
                componentHandler.upgradeElement(spinner);
            }
            document.getElementById('card__accommodation-detail').appendChild(spinner);

            // ajax call
            accommodationDetail.load(accommodationDetailUrl, { id: accommodationId });
        }

        function calcDimensions() {
            var winWidth = $(window).width();
            var listTitleHeight = $('.mdl-card__accommodation-list > .mdl-card__title').outerHeight();
            //var listTitleHeight = 0;
            var mainHeight = $(window).height() - $('#headerRow').height(); //  minus padding
            var accommodationsListWidth = $('#cell__accommodations-list').width();

            // set widths for scrollable table
            $('#table__accommodations-list').css({ 'width': accommodationsListWidth - 32 });
            $('.table__fixed-headers td, .table__fixed-headers th').css({ 'width': ((accommodationsListWidth - 32 - 2) / 4) });

            if (winWidth >= 960) {
                // set card heights
                $('#card__accommodations-list, #card__accommodation-detail').css({ 'height': mainHeight - 32 });

                // set tbody height for scrollable table
                var tbodyHeight = mainHeight - 32 - 32 - listTitleHeight - 50; // minus screen padding, card padding, card__title height, thead height
                if (tbodyHeight < 50) // minimum height of 50px to maintain scrollability and proportion to thead
                {
                    tbodyHeight = 50;
                }
                $('#tableBody').css({ 'height': tbodyHeight });
            }
            else if (winWidth >= 480 && winWidth < 960) {
                // set card heights
                var cardHeight = (mainHeight - 48) / 2;
                $('#card__accommodations-list, #card__accommodation-detail').css({ 'height': cardHeight });

                // set tbody height for scrollable table
                var tbodyHeight = cardHeight - 32 - listTitleHeight - 50; // minus card padding, card__title height, thead height
                if (tbodyHeight < 50) // minimum height of 50px to maintain scrollability and proportion to thead
                {
                    tbodyHeight = 50;
                }
                $('#tableBody').css({ 'height': tbodyHeight });
            }
            else {
                // set card height
                var cardHeight = 100 + $('.accommodationsFlexContainer .mdl-card__supporting-text').prop('scrollHeight') + 55;
                $('#card__accommodation-detail').css({ 'height': cardHeight });

                // load Accommodation Welcome (id = 0) in case landscape mode allowed for loading of _AccommodationDetail partial
                loadAccommodation(0);
            }
        }

    </script>
}

<script>
@section scriptWindowLoad {
    // calculate dimensions of scrollable tables
    calcDimensions();

    // load Accommodation Welcome (id = 0)
    loadAccommodation(0, true);

    // phone - add event listener for accordion clicks
    $('#accordion').find('.accordion-toggle').click(function () {

        //Expand or collapse this panel
        $(this).next().slideToggle('fast');

        //Hide the other panels
        $(".accordion-content").not($(this).next()).slideUp('fast');

    });

    $(window).resize(calcDimensions);

    }
</script>